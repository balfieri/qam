#!/usr/bin/perl -w
#
# out2sp - convert qam.out file to ngspice simulation file so we can capture the waves using ngspice
#          and perhaps model the channel later
#
use strict;
use warnings;

my $out_base = shift @ARGV || "qam";
my $line_len = shift @ARGV || "20m";
my $sp_base  = shift @ARGV || $out_base;

my $I_s  = "VI   I_clk 0 DC 0.0 PWL ( 0p 0m";
my $Q_s  = "VQ   Q_clk 0 DC 0.0 PWL ( 0p 0m";
my $IQ_s = "VIQ IQ_clk 0 DC 0.0 PWL ( 0p 0m";

open( Q, "${out_base}.out" ) or die "ERROR: could not open ${out_base}.out for input\n";
my $ts = 0.0;
my $time = 0.0;
while( <Q> )
{
    if ( /TIMESTEP_PS=(\S+)/ ) {
        $ts = $1;
    } elsif ( /(\S+) \+ (\S+) \= (\S+)/ ) {
        my $I  = $1;
        my $Q  = $2;
        my $IQ = $3;
        $time += $ts;
        $I_s  .= " ${time}p " . sprintf( "%6.4fm", $I );
        $Q_s  .= " ${time}p " . sprintf( "%6.4fm", $Q );
        $IQ_s .= " ${time}p " . sprintf( "%6.4fm", $IQ );
    }
}
close( Q );

$I_s  .= " )";
$Q_s  .= " )";
$IQ_s .= " )";

my $end_time = int( $time + 0.5 );

print "Creating ${sp_base}.sp and running ngspice on it...\n";
open( S, ">${sp_base}.sp" ) or die "ERROR: unable to open ${sp_base}.sp for output\n";
print S <<EOF;
* ${sp_base}.sp
.param Vmax = 200m
.param Vgnd = 0m
.param Vmin = -200m

$I_s
$Q_s
$IQ_s

* LC-dominated lossy transmission line (10mm) with Z0 = 43 ohms
.model line ltra len='$line_len' rel=1 r=5.361470e+01 g=0 l=2.625091e-07 c=1.391871e-10 
ow0   IQ_clk     Vmin IQ_clk_rcv Vmin line       ; transmission line proper (one wire)
cw0t  IQ_clk     Vmin 1p                         ; Tx terminating capacitance
cw0r  IQ_clk_rcv Vmin 1p                         ; Rx terminating capacitance
rw0rp IQ_clk_rcv Vmax '43/2'                     ; Rx terminating resistance tied to Vmax
rw0rn IQ_clk_rcv Vmin '43/2'                     ; Rx terminating resistance tied to Vmin

.OP

.tran 1p ${end_time}p

.control
run
hardcopy ${sp_base}.iqiq.eps v(I_clk) v(Q_clk) v(IQ_clk)
hardcopy ${sp_base}.inq.eps v(I_clk) v(Q_clk)
hardcopy ${sp_base}.i.eps v(I_clk) 
hardcopy ${sp_base}.q.eps v(Q_clk) 
hardcopy ${sp_base}.iqt.eps v(IQ_clk) 
hardcopy ${sp_base}.iqr.eps v(IQ_clk_rcv)
hardcopy ${sp_base}.iqiq.eps v(IQ_clk) v(IQ_clk_rcv)
.endc
EOF
close( S );

my $cmd = "~/ngspice/release/src/ngspice -b ${sp_base}.sp -r ${sp_base}.raw >& ${sp_base}.sp.out";
print "${cmd}\n";
system( $cmd );
